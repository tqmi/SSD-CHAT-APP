[{"C:\\old\\Facultate\\Anul 3\\sem1\\SSD\\SSD-CHAT-APP\\sca\\src\\index.js":"1","C:\\old\\Facultate\\Anul 3\\sem1\\SSD\\SSD-CHAT-APP\\sca\\src\\App.js":"2","C:\\old\\Facultate\\Anul 3\\sem1\\SSD\\SSD-CHAT-APP\\sca\\src\\firebase.js":"3","C:\\old\\Facultate\\Anul 3\\sem1\\SSD\\SSD-CHAT-APP\\sca\\src\\Auth.js":"4","C:\\old\\Facultate\\Anul 3\\sem1\\SSD\\SSD-CHAT-APP\\sca\\src\\ChatRoom.js":"5","C:\\old\\Facultate\\Anul 3\\sem1\\SSD\\SSD-CHAT-APP\\sca\\src\\TopicsList.js":"6","C:\\old\\Facultate\\Anul 3\\sem1\\SSD\\SSD-CHAT-APP\\sca\\src\\Layout.js":"7","C:\\old\\Facultate\\Anul 3\\sem1\\SSD\\SSD-CHAT-APP\\sca\\src\\HomePage.js":"8","C:\\old\\Facultate\\Anul 3\\sem1\\SSD\\SSD-CHAT-APP\\sca\\src\\Menu.js":"9","C:\\old\\Facultate\\Anul 3\\sem1\\SSD\\SSD-CHAT-APP\\sca\\src\\NewTopic.js":"10","C:\\old\\Facultate\\Anul 3\\sem1\\SSD\\SSD-CHAT-APP\\sca\\src\\AskNewTopic.js":"11","C:\\old\\Facultate\\Anul 3\\sem1\\SSD\\SSD-CHAT-APP\\sca\\src\\AskedTopics.js":"12"},{"size":229,"mtime":1609332713354,"results":"13","hashOfConfig":"14"},{"size":1723,"mtime":1610020300932,"results":"15","hashOfConfig":"14"},{"size":637,"mtime":1609950717259,"results":"16","hashOfConfig":"14"},{"size":674,"mtime":1610019018283,"results":"17","hashOfConfig":"14"},{"size":1826,"mtime":1610019018285,"results":"18","hashOfConfig":"14"},{"size":2517,"mtime":1610019018289,"results":"19","hashOfConfig":"14"},{"size":359,"mtime":1609858029766,"results":"20","hashOfConfig":"14"},{"size":892,"mtime":1610019018286,"results":"21","hashOfConfig":"14"},{"size":481,"mtime":1610019018287,"results":"22","hashOfConfig":"14"},{"size":1527,"mtime":1610019018288,"results":"23","hashOfConfig":"14"},{"size":1536,"mtime":1610019912594,"results":"24","hashOfConfig":"14"},{"size":1607,"mtime":1610020597138,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"19tw1w7",{"filePath":"29","messages":"30","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"28"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\old\\Facultate\\Anul 3\\sem1\\SSD\\SSD-CHAT-APP\\sca\\src\\index.js",[],["59","60"],"C:\\old\\Facultate\\Anul 3\\sem1\\SSD\\SSD-CHAT-APP\\sca\\src\\App.js",["61","62","63"],"C:\\old\\Facultate\\Anul 3\\sem1\\SSD\\SSD-CHAT-APP\\sca\\src\\firebase.js",[],"C:\\old\\Facultate\\Anul 3\\sem1\\SSD\\SSD-CHAT-APP\\sca\\src\\Auth.js",["64","65"],"import React, { Component } from 'react';\r\nimport {firebase,auth,firestore} from './firebase';\r\nimport './Auth.css';\r\nfunction SignIn (){\r\n\r\n\tconst signInWithGoogle = () => {\r\n\t  const provider = new firebase.auth.GoogleAuthProvider();\r\n\t  auth.signInWithPopup(provider);\r\n\t};\r\n\t  \r\n\t\r\n\treturn (\r\n\t\t<div className=\"signin\">\r\n\t\t\t<button onClick={signInWithGoogle}>Sign in with Google</button>\r\n\t\t\t<p>Do not violate the community guidelines or you will be banned for life!</p>\r\n\t\t</div>\r\n\t);\r\n}\r\n  \r\nfunction SignOut (){\r\n\t\r\n\treturn auth.currentUser && (\r\n\t\t<button className=\"signout\" onClick={() => auth.signOut()}>Sign Out</button>\r\n\t\t);\r\n\t\r\n}\r\n  \r\nexport {SignIn,SignOut};","C:\\old\\Facultate\\Anul 3\\sem1\\SSD\\SSD-CHAT-APP\\sca\\src\\ChatRoom.js",["66"],"import './ChatRoom.css'\r\n\r\nimport React, {useRef, useState} from 'react';\r\n\r\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\r\nimport {firebase,auth,firestore} from './firebase';\r\nimport {SignOut} from './Auth';\r\n\r\nfunction ChatRoom(props) {\r\n\t\r\n\tconst dummy = useRef();\r\n\tconst messagesRef = firestore.collection('topics').doc(props.topicID).collection('messages');\r\n\tconst query = messagesRef.orderBy('createdAt').limit(25);\r\n\tconst [messages] = useCollectionData(query, { idField: 'id' });\r\n\tconst [formValue, setFormValue] = useState('');\r\n  \r\n  \r\n\tconst sendMessage = async (e) => {\r\n\t  e.preventDefault();\r\n  \r\n\t  const { uid, photoURL } = auth.currentUser;\r\n  \r\n\t  await messagesRef.add({\r\n\t\ttext: formValue,\r\n\t\tcreatedAt: firebase.firestore.FieldValue.serverTimestamp(),\r\n\t\tuid,\r\n\t\tphotoURL\r\n\t  })\r\n  \r\n\t  setFormValue('');\r\n\t  dummy.current.scrollIntoView({ behavior: 'smooth' });\r\n\t}\r\n  \r\n\treturn (<>\r\n\t<div className=\"App\">\r\n\t\t<header>\r\n\t\t\t<h1>SCA</h1>\r\n\t\t\t<SignOut />\r\n\t\t</header>\r\n\t\t<section>\r\n\t\t\t<main>\r\n\t\r\n\t\t\t\t{messages && messages.map(msg => <ChatMessage key={msg.id} message={msg} />)}\r\n\r\n\t\t\t\t<span ref={dummy}></span>\r\n\r\n\t\t\t</main>\r\n\r\n\t\t\t<form onSubmit={sendMessage} className=\"message-form\">\r\n\r\n\t\t\t\t<input value={formValue} onChange={(e) => setFormValue(e.target.value)} placeholder=\"say something nice\" />\r\n\r\n\t\t\t\t<button type=\"submit\" disabled={!formValue}>SEND</button>\r\n\r\n\t\t\t</form>\r\n\t\t</section>\r\n\t</div>\r\n\t</>)\r\n}\r\n\r\nfunction ChatMessage(props) {\r\n\tconst { text, uid, photoURL } = props.message;\r\n  \r\n\tconst messageClass = uid === auth.currentUser.uid ? 'sent' : 'received';\r\n  \r\n\treturn (<>\r\n\t  <div className={`message ${messageClass}`}>\r\n\t\t<img src={photoURL || process.env.PUBLIC_URL +'/static/avatar.png'} />\r\n\t\t<p>{text}</p>\r\n\t  </div>\r\n\t</>)\r\n  }\r\n\r\nexport default ChatRoom;\r\n","C:\\old\\Facultate\\Anul 3\\sem1\\SSD\\SSD-CHAT-APP\\sca\\src\\TopicsList.js",["67"],"import './TopicsList.css'\r\n\r\nimport React, { useState } from 'react';\r\n\r\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\r\nimport {firebase,auth,firestore} from './firebase'\r\n\r\nfunction TopicsList(props) {\r\n\r\n    \r\n    const topicsRef = firestore.collection('topics');\r\n    const [query,setQuery] = useState(topicsRef.orderBy('name'));\r\n    const [topics] = useCollectionData(query,{idField:'id'});\r\n    const [searchValue,setSearchValue] = useState('');\r\n\r\n\r\n    const searchTopic = async(e) => {\r\n        e.preventDefault();\r\n        console.log(searchValue.length);\r\n        if(searchValue.length == 0){\r\n            setQuery(topicsRef.orderBy('name'));\r\n        }\r\n        else{\r\n            setQuery(topicsRef.where('name','==',searchValue));\r\n        }\r\n        setSearchValue('');\r\n    }\r\n    \r\n    return (<div className='App'>\r\n        <header>\r\n\t\t      <h1>Topics</h1>\t\t\t\r\n\t\t    </header>\r\n        <div ClassName=\"topics\">\r\n\r\n        <form onSubmit={searchTopic}>\r\n\r\n            <input value={searchValue} onChange={(e) => setSearchValue(e.target.value)} placeholder=\"Search\" />\r\n\r\n            <button type=\"submit\">SEARCH</button>\r\n\r\n        </form>\r\n            {topics && topics.map(topic =>{ return (\r\n                <>\r\n                    <Topic key={topic.id} switchTopic={props.switchTopic} Topic={topic}/>\r\n                </>\r\n            )})}\r\n        </div>\r\n    </div>)\r\n\r\n}\r\n\r\n\r\n\r\nfunction Topic(props) {\r\n    \r\n    const {uid} = auth.currentUser;\r\n    function switchTopic(topicID){\r\n        props.switchTopic(topicID);\r\n    }\r\n\r\n    const subscribeToTopic = async(topicID) => {\r\n        const topicRef = firestore.collection('topics').doc(topicID);\r\n        await topicRef.update({subscribers: firebase.firestore.FieldValue.arrayUnion(uid)});\r\n    }\r\n\r\n    const unsubscribeToTopic = async(topicID) => {\r\n        const topicRef = firestore.collection('topics').doc(topicID);\r\n        await topicRef.update({subscribers: firebase.firestore.FieldValue.arrayRemove(uid)});\r\n    }\r\n\r\n    return (<>\r\n        <button onClick={()=>switchTopic(props.Topic.id)}>{props.Topic.name}</button>\r\n\r\n        {(props.Topic.subscribers && props.Topic.subscribers.includes(uid)) ? \r\n                        \r\n            (<button onClick={()=>unsubscribeToTopic(props.Topic.id)}>unsubscribe</button>)\r\n            \r\n            : \r\n            \r\n            (<button onClick={()=>subscribeToTopic(props.Topic.id)}>subscribe</button>)\r\n        }\r\n\r\n    </>)\r\n}\r\n\r\nexport default TopicsList;","C:\\old\\Facultate\\Anul 3\\sem1\\SSD\\SSD-CHAT-APP\\sca\\src\\Layout.js",["68"],"import './Layout.css';\r\nimport React, { Component } from 'react';\r\n\r\nfunction Layout (props){\r\n\t\r\n\treturn (\r\n\t\t<div className=\"Layout\">\r\n\t\t\t<div className=\"col-15\">\r\n\t\t\t{props.left}\r\n\t\t\t</div>\r\n\t\t\t<div className=\"col-70\">\r\n\t\t\t{props.center}\r\n\t\t\t</div>\r\n\t\t\t<div className=\"col-15\">\r\n\t\t\t{props.right}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Layout;\r\n\r\n\r\n","C:\\old\\Facultate\\Anul 3\\sem1\\SSD\\SSD-CHAT-APP\\sca\\src\\HomePage.js",["69"],"import './HomePage.css'\r\n\r\nimport React from 'react';\r\n\r\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\r\nimport {firebase,auth,firestore} from './firebase'\r\n\r\nfunction HomePage(props) {\r\n\r\n\tconst topicsRef = firestore.collection('topics');\r\n\tconst {uid} = auth.currentUser;\r\n    const query = topicsRef.where('subscribers','array-contains',uid);\r\n    const [topics] = useCollectionData(query,{idField:'id'});\r\n    \r\n\r\n    function switchTopic(topicID){\r\n        props.switchTopic(topicID);\r\n    }\r\n\r\n    return (<div className=\"App\">\r\n        <header>\r\n\t\t    <h1>HOME</h1>\t\t\t\r\n\t\t</header>\r\n        <main>\r\n            {topics && topics.map(topic => (\r\n                <>\r\n                    <button key={topic.id} onClick={()=>switchTopic(topic.id)}>{topic.name}</button>\r\n                </>\r\n            ))}\r\n        </main>\r\n    </div>)\r\n}\r\n\r\nexport default HomePage;","C:\\old\\Facultate\\Anul 3\\sem1\\SSD\\SSD-CHAT-APP\\sca\\src\\Menu.js",["70","71","72","73","74","75"],"import './Menu.css'\r\n\r\nimport React, { useRef, useState } from 'react';\r\n\r\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\r\nimport { firebase, auth, firestore } from './firebase'\r\n\r\n\r\nfunction Menu(props) {\r\n\r\n    return (\r\n    <div className='App'>\r\n        <header>\r\n\t\t    <h1>Menu</h1>\t\t\t\r\n\t\t</header>\r\n        {props.options && props.options.map(opt=><button onClick={()=> opt.action()}>{opt.name}</button>)}\r\n    </div>\r\n    );\r\n\r\n}\r\n\r\nexport default Menu;","C:\\old\\Facultate\\Anul 3\\sem1\\SSD\\SSD-CHAT-APP\\sca\\src\\NewTopic.js",["76"],"import './NewTopic.css'\r\n\r\nimport React, { useState } from 'react';\r\n\r\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\r\nimport {firebase,auth,firestore} from './firebase'\r\n\r\nfunction NewTopic(props) {\r\n\r\n\t// const topicsRef = firestore.collection('topics');\r\n\t// const {uid} = auth.currentUser;\r\n    // const query = topicsRef.where('subscribers','array-contains',uid);\r\n    // const [topics] = useCollectionData(query,{idField:'id'});\r\n    \r\n    const [name,setName] = useState('');\r\n    const [desc,setDesc] = useState('');\r\n\r\n    const createNewTopic = async(e) =>{\r\n        e.preventDefault();\r\n        const { uid } = auth.currentUser;\r\n        const topicsRef = firestore.collection('topics');\r\n        topicsRef.add({name:name,description:desc,createdAt:firebase.firestore.FieldValue.serverTimestamp(),createdBy:uid});\r\n\r\n        setName('');\r\n        setDesc('');\r\n    }\r\n\r\n    return (<div className=\"App\">\r\n        <header>\r\n\t\t    <h1>New Topic</h1>\t\t\t\r\n\t\t</header>\r\n        <main>\r\n            <form onSubmit={createNewTopic} className='topic-form'>\r\n\t\t\t\t<label>Name :</label><input type='text' id=\"name\" name='name' placeholder='Topic Name' value={name} onChange={(e)=>setName(e.target.value)}/>\r\n\t\t\t\t<label>Description :</label><input type='text' id='desc' name='desc' placeholder='Description' value={desc} onChange={(e)=>setDesc(e.target.value)}/>\r\n                <button type=\"submit\" disabled={!name}>Create</button>\r\n\t\t\t</form>\r\n        </main>\r\n    </div>)\r\n}\r\n\r\nexport default NewTopic;","C:\\old\\Facultate\\Anul 3\\sem1\\SSD\\SSD-CHAT-APP\\sca\\src\\AskNewTopic.js",["77"],"import './AskNewTopic.css'\r\n\r\nimport React, { useState } from 'react';\r\n\r\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\r\nimport {firebase,auth,firestore} from './firebase'\r\n\r\nfunction AskNewTopic(props) {\r\n\r\n\t// const topicsRef = firestore.collection('topics');\r\n\t// const {uid} = auth.currentUser;\r\n    // const query = topicsRef.where('subscribers','array-contains',uid);\r\n    // const [topics] = useCollectionData(query,{idField:'id'});\r\n    \r\n    const [name,setName] = useState('');\r\n    const [desc,setDesc] = useState('');\r\n\r\n    const askNewTopic = async(e) =>{\r\n        e.preventDefault();\r\n        const { uid } = auth.currentUser;\r\n        const topicsRef = firestore.collection('asked_topics');\r\n        topicsRef.add({name:name,description:desc,createdAt:firebase.firestore.FieldValue.serverTimestamp(),createdBy:uid});\r\n\r\n        setName('');\r\n        setDesc('');\r\n    }\r\n\r\n    return (<div className=\"App\">\r\n        <header>\r\n\t\t    <h1>Ask Topic</h1>\t\t\t\r\n\t\t</header>\r\n        <main>\r\n            <form onSubmit={askNewTopic} className='topic-form'>\r\n\t\t\t\t<label>Name :</label><input type='text' id=\"name\" name='name' placeholder='Topic Name' value={name} onChange={(e)=>setName(e.target.value)}/>\r\n\t\t\t\t<label>Description :</label><input type='text' id='desc' name='desc' placeholder='Description' value={desc} onChange={(e)=>setDesc(e.target.value)}/>\r\n                <button type=\"submit\" disabled={!name}>Create</button>\r\n\t\t\t</form>\r\n        </main>\r\n    </div>)\r\n}\r\n\r\nexport default AskNewTopic;","C:\\old\\Facultate\\Anul 3\\sem1\\SSD\\SSD-CHAT-APP\\sca\\src\\AskedTopics.js",["78","79","80","81"],{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","severity":1,"message":"87","line":5,"column":10,"nodeType":"88","messageId":"89","endLine":5,"endColumn":18},{"ruleId":"86","severity":1,"message":"90","line":10,"column":18,"nodeType":"88","messageId":"89","endLine":10,"endColumn":25},{"ruleId":"86","severity":1,"message":"91","line":25,"column":10,"nodeType":"88","messageId":"89","endLine":25,"endColumn":15},{"ruleId":"86","severity":1,"message":"92","line":1,"column":17,"nodeType":"88","messageId":"89","endLine":1,"endColumn":26},{"ruleId":"86","severity":1,"message":"93","line":2,"column":23,"nodeType":"88","messageId":"89","endLine":2,"endColumn":32},{"ruleId":"94","severity":1,"message":"95","line":68,"column":3,"nodeType":"96","endLine":68,"endColumn":73},{"ruleId":"97","severity":1,"message":"98","line":20,"column":31,"nodeType":"99","messageId":"100","endLine":20,"endColumn":33},{"ruleId":"86","severity":1,"message":"92","line":2,"column":17,"nodeType":"88","messageId":"89","endLine":2,"endColumn":26},{"ruleId":"86","severity":1,"message":"87","line":6,"column":9,"nodeType":"88","messageId":"89","endLine":6,"endColumn":17},{"ruleId":"86","severity":1,"message":"101","line":3,"column":17,"nodeType":"88","messageId":"89","endLine":3,"endColumn":23},{"ruleId":"86","severity":1,"message":"102","line":3,"column":25,"nodeType":"88","messageId":"89","endLine":3,"endColumn":33},{"ruleId":"86","severity":1,"message":"103","line":5,"column":10,"nodeType":"88","messageId":"89","endLine":5,"endColumn":27},{"ruleId":"86","severity":1,"message":"87","line":6,"column":10,"nodeType":"88","messageId":"89","endLine":6,"endColumn":18},{"ruleId":"86","severity":1,"message":"104","line":6,"column":20,"nodeType":"88","messageId":"89","endLine":6,"endColumn":24},{"ruleId":"86","severity":1,"message":"93","line":6,"column":26,"nodeType":"88","messageId":"89","endLine":6,"endColumn":35},{"ruleId":"86","severity":1,"message":"103","line":5,"column":10,"nodeType":"88","messageId":"89","endLine":5,"endColumn":27},{"ruleId":"86","severity":1,"message":"103","line":5,"column":10,"nodeType":"88","messageId":"89","endLine":5,"endColumn":27},{"ruleId":"86","severity":1,"message":"87","line":6,"column":9,"nodeType":"88","messageId":"89","endLine":6,"endColumn":17},{"ruleId":"86","severity":1,"message":"104","line":6,"column":18,"nodeType":"88","messageId":"89","endLine":6,"endColumn":22},{"ruleId":"86","severity":1,"message":"105","line":17,"column":11,"nodeType":"88","messageId":"89","endLine":17,"endColumn":22},{"ruleId":"97","severity":1,"message":"98","line":20,"column":31,"nodeType":"99","messageId":"100","endLine":20,"endColumn":33},"no-native-reassign",["106"],"no-negated-in-lhs",["107"],"no-unused-vars","'firebase' is defined but never used.","Identifier","unusedVar","'SignOut' is defined but never used.","'topic' is assigned a value but never used.","'Component' is defined but never used.","'firestore' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useRef' is defined but never used.","'useState' is defined but never used.","'useCollectionData' is defined but never used.","'auth' is defined but never used.","'searchTopic' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]